{
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "header-file-pbds": {
    "prefix": "pbds",
    "body": [
      "#include<ext/pb_ds/assoc_container.hpp>",
      "#include<ext/pb_ds/tree_policy.hpp>",
      "using namespace __gnu_pbds;    // find_by_order(ind); order_of_key(val);",
      "typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> odset;",
      ""
    ]
  },
  "dbg snippets": {
    "prefix": "debugger1",
    "body": [
      "#ifndef ONLINE_JUDGE     \/\/     #include \"C:/Users/hhars/OneDrive/Documents/CPP_Practice/Algo/debug.h\"",
      "#include \"Algo\/debug.h\"",
      "#else",
      "#define fix(x)",
      "#endif",
      ""
    ]
  },
  "defines1 snippets": {
    "prefix": "definitions1",
    "body": [
      "#define ll long long int",
      "#define nline \"\\n\"",
      "#define sz(x) (x).size()",
      "#define inf INT_MAX         // 1e18 + 7",
      "#define Mod 1000000007      // 998244353",
      "#define v32 vector<int>",
      "#define pb emplace_back",
      "#define all(x) (x).begin(), (x).end()",
      "#define forf(i, s, e) for(int i = s; i < e; i++)",
      "#define forb(i, e, s) for(int i = e; i >= s; i--)",
      ""
    ]
  },
  "defines2 snippets": {
    "prefix": "definitions2",
    "body": [
      "#define ll long long int",
      "#define ull unsigned long long",
      "#define lld long double",
      "#define nline \"\\n\"",
      "#define sz(x) (x).size()",
      "#define inf INT_MAX         // 1e18 + 7",
      "#define Mod 1000000007      // 998244353",
      "#define pi 3.141592653589793238462",
      "#define fi first",
      "#define se second",
      "#define v32 vector<int>     //  #define v64 vector<ll>",
      "#define vv32 vector<v32>    //  #define vv64 vector<v64>",
      "#define ppi pair<int,int>   //  #define ppl pair<ll,ll>",
      "#define vp32 vector<ppi>    //  #define vp64 vector<ppl>",
      "#define mp32 map<int,int>   //  #define mp64 map<ll, ll>",
      "template<class T> using pqmax = priority_queue<T>;",
      "template<class T> using pqmin = priority_queue<T, vector<T>, greater<T>>;",
      "#define pb emplace_back",
      "#define mpr make_pair",
      "#define sz(x) (x).size()",
      "#define all(x) (x).begin(), (x).end()",
      "#define forf(i, s, e) for(int i = s; i < e; i++)",
      "#define forb(i, e, s) for(int i = e; i >= s; i--)",
      "",
    ]
  },
  "debug snippets": {
    "prefix": "debugger2",
    "body": [
      "#ifndef ONLINE_JUDGE",
      "#define fix(x) cerr<<#x<<\" \";_print_(x);cerr<<endl;",
      "#else",
      "#define fix(x)",
      "#endif",
      "",
      "void _print_(int x)  { cerr <<  x;  }",
      "void _print_(ll x) { cerr <<  x;  }",
      "void _print_(ull x)  { cerr <<  x;  }",
      "void _print_(double x) { cerr <<  x;  }",
      "void _print_(lld x)  { cerr <<  x;  }",
      "void _print_(char x) { cerr <<  x;  }",
      "void _print_(string x) { cerr <<  x;  }",
      "",
      "template<class T, class V> void _print_(pair<T, V> p);",
      "template<class T> void _print_(vector<T> v);",
      "template<class T, size_t sz> void _print_(array<T, sz> v);",
      "template<class T> void _print_(deque<T> v);",
      "template<class T> void _print_(set<T> s);",
      "template<class T> void _print_(unordered_set<T> s);",
      "template<class T> void _print_(multiset<T> m);",
      "template<class T, class V> void _print_(map<T, V> m);",
      "template<class T, class V> void _print_(unordered_map<T, V> m);",
      "template<class T> void _print_(priority_queue<T, vector<T>, greater<T>> pq);",
      "template<class T> void _print_(priority_queue<T> pq);",
      "",
      "template<class T, class V> void _print_(pair<T, V> p){ cerr<<\"{\";  _print_(p.fi);  cerr<<\", \";  _print_(p.se);  cerr<<\"}\";}",
      "template<class T> void _print_(vector<T> v){ cerr<<\"[ \"; for(T x : v){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T, size_t sz> void _print_(array<T, sz> v) { cerr<<\"[ \"; for(T x : v){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T> void _print_(deque<T> v) { cerr<<\"[ \"; for(T x : v){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T> void _print_(set<T> s){ cerr<<\"[ \"; for(T x: s){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T> void _print_(unordered_set<T> h){ cerr<<\"[ \"; for(T x: h){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T> void _print_(multiset<T> m){ cerr<<\"[ \"; for(T x: m){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T, class V> void _print_(map<T, V> m){ cerr<<\"[ \"; for(auto x: m){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T, class V> void _print_(unordered_map<T, V> m){ cerr<<\"[ \"; for(auto x: m){_print_(x); cerr<<' ';} cerr<<\"]\";}",
      "template<class T> void _print_(priority_queue<T, vector<T>, greater<T>> pq){  while( pq.size() ){ _print_(pq.top()); cerr << ' '; pq.pop(); } }",
      "template<class T> void _print_(priority_queue<T> pq){while( pq.size() ){ _print_(pq.top()); cerr <<' '; pq.pop(); } }",

      ""
    ]
  },
  "short_cut snippet":{
    "prefix": "sout",
    "body": [
      "",
      "template<class T, class V> ostream& operator<<(ostream& os, pair<T, V> p);",
      "template<class T> ostream& operator<<(ostream& os, vector<T> v);",
      "template<class T> ostream& operator<<(ostream& os, deque<T> dq);",
      "template<class T> ostream& operator<<(ostream& os, set<T> s);",
      "template<class T> ostream& operator<<(ostream& os, unordered_set<T> h);",
      "template<class T> ostream& operator<<(ostream& os, multiset<T> h);",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T, vector<T>, greater<T>> pq);",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T> pq);",
      "",
      "template<typename T, typename V>    ostream& operator<<(ostream& os, pair<T, V> p){os<<p.fi<<\" \"<<p.se<<\"\\n\"; return os; }",
      "template<typename T>    vector<T>& operator++(vector<T> &v){for (auto& i : v) ++i;  return  v;} // prefix incrementor",
      "template<typename T>    vector<T>& operator--(vector<T> &v){for (auto& i : v) --i;  return  v;} // prefix decrementor",
      "template<typename T>    istream& operator>>(istream& is, vector<T> &v){for (auto& i : v) is >> i;  return is;}",
      "template<typename T>    ostream& operator<<(ostream& os, vector<T>  v){for (auto& i : v) os << i << ' ';   return os;}",
      "template<typename T>    ostream& operator<<(ostream& os, deque<T>  dq){for (auto& i : dq) os << i << ' ';   return os;}",
      "template<typename T>    ostream& operator<<(ostream& os, set<T> s){for  (auto i: s) os << i << ' '; return os; }",
      "template<typename T>    ostream& operator<<(ostream& os, unordered_set<T> h){for  (auto i: h) os << i << ' '; return os; }",
      "template<typename T>    ostream& operator<<(ostream& os, multiset<T> h){for  (auto i: h) os << i << ' '; return os; }",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T, vector<T>, greater<T>> pq){  while( pq.size() ){ os << pq.top() << ' '; pq.pop(); }   return os;}",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T> pq){while( pq.size() ){ os << pq.top() << ' '; pq.pop(); }  return os;}",
      "",
    ]
  },
  "vec-in-out snippets": {
    "prefix": "vecs",
    "body": [
      "template<typename T>    vector<T>& operator++(vector<T> &v){for (auto& i : v) ++i;  return  v;} // prefix incrementor",
      "template<typename T>    vector<T>& operator--(vector<T> &v){for (auto& i : v) --i;  return  v;} // prefix decrementor",
      "template<typename T>    istream& operator>>(istream& is, vector<T> &v){for (auto& i : v) is >> i;  return is;}",
      "template<typename T>    ostream& operator<<(ostream& os, vector<T>  v){for (auto& i : v) os << i << ' ';   return os;}",
      ""
    ]
  },
  "cpp snippets": {
    "prefix": "cpp1",
    "body": [
      "#include<bits/stdc++.h>",
      "using namespace std;",
      "",
      "#ifndef ONLINE_JUDGE     \/\/     #include \"C:/Users/hhars/OneDrive/Documents/CPP_Practice/Algo/debug.h\"",
      "#include \"Algo\/debug.h\"",
      "#else",
      "#define fix(x)",
      "#endif",
      "",
      "",
      "",
      "int32_t main(){",
      "",
      "ios_base::sync_with_stdio(false);    cin.tie(NULL);    cout.tie(NULL);",
      "",
      "#ifndef ONLINE_JUDGE     \/\/     #include \"C:/Users/hhars/OneDrive/Documents/CPP_Practice/Algo/config.h\"",
      "    #include \"Algo\/config.h\"",
      "#endif",
      "",
      "",
      "",
      "return 0;",
      "}"
    ]
  },
  "leetcode snippet": {
    "prefix": "leetcode",
    "body": [
      "#include<bits/stdc++.h>",
      "using namespace std;",
      "",
      "#ifndef ONLINE_JUDGE     \/\/     #include \"C:/Users/hhars/OneDrive/Documents/CPP_Practice/Algo/debug.h\"",
      "#include \"Algo\/debug.h\"   \/\/ include definitions",
      "#else",
      "#define fix(x)",
      "#endif",
      "",
      "",
      "$1",
      "",
      "",
      "int32_t main(){",
      "",
      "   ios_base::sync_with_stdio(false);    cin.tie(NULL);    cout.tie(NULL);",
      "",
      "   #ifndef ONLINE_JUDGE     \/\/     #include \"C:/Users/hhars/OneDrive/Documents/CPP_Practice/Algo/config.h\"",
      "       #include \"Algo\/config.h\"",
      "   #endif",
      "",
      "   Solution st;",
      "   vector<int> v;",
      "   int x;",
      "   while (cin >> x)",
      "       v.push_back(x);",
      "",
      "   auto ans = st.countSmaller(v);",
      "",
      "   for (auto x : ans)",
      "       cout << x << ;",
      "",
      "   return 0;",
      "}"
    ]
  },
  "C++": {
    "prefix": "cpp2",
    "body": [
      "// ..(..)..",
      "#include <bits/stdc++.h> ",
      "using namespace std;",
      "",
      "#ifndef ONLINE_JUDGE     \/\/     #include \"C:/Users/hhars/OneDrive/Documents/CPP_Practice/Algo/debug.h\"",
      "#include \"Algo\/debug.h\"",
      "#else",
      "#define fix(x)",
      "#endif",
      "",
      "// (defs1|2) & (dbg1|2) & vecs & pbds & sout",
      "",
      "",
      "",
      "void yes() { cout<<\"Yes\"<<endl; }",
      "void no() { cout<<\"No\"<<endl; }",
      "",
      "void Solution(){     // read again",
      "  ",
      "}",
      "",
      "int32_t main()",
      "{",
      "  ios_base::sync_with_stdio(false);    cin.tie(NULL);    cout.tie(NULL);",
      "",
      "  #ifndef ONLINE_JUDGE     \/\/     #include \"C:/Users/hhars/OneDrive/Documents/CPP_Practice/Algo/config.h\"",
      "    #include \"Algo\/config.h\"",
      "  #endif",
      "",
      "    clock_t st, en;",
      "    st = clock();",
      "",
      "    int tt = 1;",
      "    cin >> tt;",
      "    while (tt--){",
      "        Solution();",
      "    }",
      "",
      "    en = clock();",
      "    double ttime = double(en - st) / (1.0 * CLOCKS_PER_SEC);",
      "    fix(ttime);",
      "",
      "  return 0;",
      "}"
    ],
    "description": "CPP Snippet"
  },
  "C++ Snippet": {
    "prefix": "cpp3",
    "body": [
      "// defs(1|2) | dbg(1|2) | pbds | sout",
      "#include<bits/stdc++.h>",
      "using namespace std;",
      "",
      "#ifndef ONLINE_JUDGE     ",
      "#include \"Algo/debug.h\"   ",
      "#else   ",
      "#define fix(x)",
      "#endif",
      "",
      "#define ll long long int",
      "#define ull unsigned long long",
      "#define lld long double",
      "#define nline \"\\n\"",
      "#define inf INT_MAX         // 1e18 + 7",
      "#define sz(x) (x).size()",
      "#define M 1000000007      // 998244353",
      "#define pi 3.141592653589793238462",
      "#define fi first",
      "#define se second",
      "#define v32 vector<int>     //  #define v64 vector<ll>",
      "#define vv32 vector<v32>    //  #define vv64 vector<v64>",
      "#define ppi pair<int,int>   //  #define ppl pair<ll,ll>",
      "#define vp32 vector<ppi>    //  #define vp64 vector<ppl>",
      "#define mp32 map<int,int>   //  #define mp64 map<ll, ll>",
      "template<class T> using pqmax = priority_queue<T>;",
      "template<class T> using pqmin = priority_queue<T, vector<T>, greater<T>>;",
      "#define pb emplace_back",
      "#define mpr make_pair",
      "#define all(x) (x).begin(), (x).end()",
      "#define forf(i, s, e) for(int i = s; i < e; i++)",
      "#define forb(i, e, s) for(int i = e; i >= s; i--)",
      "",
      "template<class T, class V> ostream& operator<<(ostream& os, pair<T, V> p);",
      "template<class T> ostream& operator<<(ostream& os, vector<T> v);",
      "template<class T> ostream& operator<<(ostream& os, deque<T> dq);",
      "template<class T> ostream& operator<<(ostream& os, set<T> s);",
      "template<class T> ostream& operator<<(ostream& os, unordered_set<T> h);",
      "template<class T> ostream& operator<<(ostream& os, multiset<T> h);",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T, vector<T>, greater<T>> pq);",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T> pq);",
      "",
      "template<typename T, typename V>    ostream& operator<<(ostream& os, pair<T, V> p){os<<p.fi<<\" \"<<p.se<<\"\\n\"; return os; }",
      "template<typename T>    vector<T>& operator++(vector<T> &v){for (auto& i : v) ++i;  return  v;} // prefix incrementor",
      "template<typename T>    vector<T>& operator--(vector<T> &v){for (auto& i : v) --i;  return  v;} // prefix decrementor",
      "template<typename T>    istream& operator>>(istream& is, vector<T> &v){for (auto& i : v) is >> i;  return is;}",
      "template<typename T>    ostream& operator<<(ostream& os, vector<T>  v){for (auto& i : v) os << i << ' ';   return os;}",
      "template<typename T>    ostream& operator<<(ostream& os, deque<T>  dq){for (auto& i : dq) os << i << ' ';   return os;}",
      "template<typename T>    ostream& operator<<(ostream& os, set<T> s){for  (auto i: s) os << i << ' '; return os; }",
      "template<typename T>    ostream& operator<<(ostream& os, unordered_set<T> h){for  (auto i: h) os << i << ' '; return os; }",
      "template<typename T>    ostream& operator<<(ostream& os, multiset<T> h){for  (auto i: h) os << i << ' '; return os; }",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T, vector<T>, greater<T>> pq){  while( pq.size() ){ os << pq.top() << ' '; pq.pop(); }   return os;}",
      "template<typename T>    ostream& operator<<(ostream& os, priority_queue<T> pq){while( pq.size() ){ os << pq.top() << ' '; pq.pop(); }  return os;}",
      "",
      "void yes(){ cout<<\"Yes\"<<endl; }",
      "void no(){ cout<<\"No\"<<endl; }",
      "",
      "void solve(){",
      "",
      "}",
      "",
      "int32_t main(){",
      "",
      " ios_base::sync_with_stdio(false);    cin.tie(NULL);    cout.tie(NULL);",
      "",
      " #ifndef ONLINE_JUDGE     //     #include \"C:\/Users\/hhars\/OneDrive\/Documents\/CPP_Practice\/Algo\/config.h\"",
      "     #include \"Algo/config.h\"",
      " #endif",
      "",
      "    clock_t st, en;",
      "    st = clock();",
      "",
      "    int tt = 1;",
      "    cin >> tt;",
      "    while (tt--){",
      "        Solution();",
      "    }",
      "",
      "    en = clock();",
      "    double ttime = double(en - st) / (1.0 * CLOCKS_PER_SEC);",
      "    fix(ttime);",
      "",
      " return 0;",
      "}",
    ],
    "description": "C++ Snippet"
  }
}